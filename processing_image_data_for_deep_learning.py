# -*- coding: utf-8 -*-
"""Processing Image Data for Deep Learning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EMJaSsOEjI5gOFpv1ReRPsVIlOu7r3vn

**Topics:**

*   Reading an image file and converting it to a numpy array
*   Resizing an image
*   RGB to Grayscale Conversion
"""

!wget 'https://static.toiimg.com/thumb/msid-119053065,width-1280,height-720,imgsize-102204,resizemode-6,overlay-toi_sw,pt-32,y_pad-40/photo.jpg'

"""**Libraries that can be used for image processing:**

1. matplotlib.image
2. Pillow
3. OpenCV (cv2)
"""

#importing the image module from the matplotlib library
import matplotlib.image as mpimg #process image
import matplotlib.pyplot as plt #plot graphs/plots

#loading an image through matplotlib.image module
img = mpimg.imread('/content/photo.jpg')

type(img)

print(img.shape) #1st and 2nd value - dimensions, 3rd value - color channels

print(img) #numpy array, it can be converted back to an image as well

#converting and displaying an numpy array to an image
img_plot = plt.imshow(img)
plt.show()

"""Resizing the image using Pillow library"""

from PIL import Image

img = Image.open('/content/photo.jpg')
img_resized = img.resize((200,200))

img_resized.save('photo_image_resized.jpg')

#converting and displaying an numpy array to an image

img_res = mpimg.imread('/content/photo_image_resized.jpg')
img_res_plot = plt.imshow(img_res)
plt.show()

print(img_res.shape) #now the image has been resized

"""**Converting RGB images to GrayScale image using OpenCV**"""

import cv2 #importing OpenCV library
img = cv2.imread('/content/photo.jpg')

type(img)

img.shape

grayscale_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY) #convert color function rgb to grayscale

type(grayscale_img)

grayscale_img.shape #grayscale images have only 1 channel

"""cv2.imshow() - will display the image but this isn't allowed in google collab.

alternative : **from google.colab.patches import cv2_imshow**
"""

from google.colab.patches import cv2_imshow

#displaying the image in grayscale
cv2_imshow(grayscale_img) #displays in original dimensions (cv2)

#saving the grayscale image using cv2
cv2.imwrite('photo_grayscale_image.jpg',grayscale_img)

"""***Converting RGB images to grayscale saves alot of space***"""

